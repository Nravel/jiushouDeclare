<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/9/11
 * Time: 11:49
 */

namespace app\admin\controller;


//use app\admin\model\OrderHead;
use app\admin\model\OrderBatch;
use app\admin\model\OrderPreview;
use app\common\controller\Excel;
//use think\Db;
//use think\Exception;
use think\Loader;
use app\admin\model\Order as OrderModel;

class Order extends Common
{
    protected $orderModel;
    protected $hasParam = false;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->orderModel = new OrderModel();
        $this->orderModel->request = $this->request;
        $this->hasParam = count($this->request->param())>0;
    }

    /**
     * 订单列表页
     * @return mixed
     */
    public function index() {
        if ($this->hasParam) {
            return $this->orderModel->getOrderDatas();
        }else{
            return $this->fetch('order-list');
        }
    }

    /**
     * 订单详情
     * @return mixed
     */
    public function details() {
        $orderNo = $this->request->param('orderNum');
        if ($orderNo === null) {
            return $this->orderModel->getOrderDetails();
        }else{
            return $this->fetch('order-details',['orderNo'=>$orderNo]);
        }
    }

    /**
     * 订单修改
     * @return mixed
     */
    public function edit() {
        $orderNo = $this->request->param('orderNum');
        if ($orderNo === null) {
            return $this->orderModel->editOrder();
        }else{
            return $this->fetch('order-edit',['orderNo'=>$orderNo]);
        }
    }

    /**
     * 获取倒数十条批次号
     * @return array
     */
    public function getLastBatchs() {
        $orderBatch = new OrderBatch();
        $datas = $orderBatch->field('batch_time')->order('batch_time desc')->limit(0,10)->select();
        return feedback('0000','success',$datas);
    }

    /**
     * 删除订单
     * @return mixed
     */
    public function delOrder() {
        return $this->orderModel->delOrder();
    }

    /**
     * 导入订单
     * @return mixed
     */
    public function importData() {
        return $this->orderModel->importData();
    }

    /**
     * 订单预览
     * @return mixed
     */
    public function preview() {
        if ($this->request->param('req')==='del') {
            return $this->orderModel->delPreviewOrder();
        }else if ($this->request->param('req')==='save') {
            try {
                return $this->orderModel->savePreviewData(json_decode($this->request->param('datas'),true));
            }catch (\Exception $e) {
                return $this->orderModel->savePreviewData($this->request->param('datas/a'));
            }
        }else if ($this->request->param('req')==='get') {
            return $this->orderModel->getPreviewData();
        }else if ($this->request->param('req')==='get') {
            return $this->orderModel->getPreviewData();
        }else if ($this->request->param('req')==='edit') {
            return $this->orderModel->editPreviewOrder();
        }else{
            return $this->fetch('order-preview');
        }
    }

    /**
     * 导出订单页
     * @return mixed
     */
    public function export() {
        if ($this->hasParam) {
            return $this->orderModel->getOrderBatch();
        }else{
            return $this->fetch('order-export');
        }
    }

    /**
     *导出excel数据
     */
//    public function exportData() {
//        //获取要导出的类型和批次
//                $ex_info = explode("|",$this->request->post("ex_info"));
//                $datatype = $this->request->post("datatype");
//                $data = $this->request->post("data/a");
//                Loader::model("OrderBatch")->exportOrders($ex_info,$data,$datatype);
//    }

    /**
     *导出Nfexcel数据
     */
    public function exportData() {
        //获取要导出的类型和批次
        $ex_info = explode("|",$this->request->post("ex_info"));
        $datatype = $this->request->post("datatype");
        $data = $this->request->post("data/a");
        Loader::model("OrderBatch")->exportOrders($ex_info,$data,$datatype);
    }

    /**
     *清空上传目录
     */
    public function clearUploads() {
        $excelObj = new Excel();
        is_dir("uploads") ? $excelObj->del_dir("uploads",1) : "" ;
    }

    /**
     * 订单支付
     * @return array
     */
    public function pay() {
        $orderNo = $this->request->param('order_no');

        /*****************支付业务逻辑*************/
        $result = true;
        /*****************支付业务逻辑*************/

        if ($result) {
            return feedback('0000','支付成功！',null);
        }else{
            return feedback('0001','支付失败！',null);
        }
    }

    /**
     * 报关
     * @return array
     */
    public function declaration() {
        $batch = $this->request->param('batch');

        /*****************支付业务逻辑*************/
        $result = true;
        /*****************支付业务逻辑*************/

        if ($result) {
            return feedback('0000','报关成功！',null);
        }else{
            return feedback('0001','报关失败！',null);
        }
    }
}